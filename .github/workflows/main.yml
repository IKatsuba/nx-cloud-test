name: CI
on:
  push:
    branches:
      - master
  pull_request:

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

jobs:
  main:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout [main]
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v1
      - uses: actions/setup-node@v1
      - run: npm ci
      - run: npx nx run-many --target=build --parallel --max-parallel=3 --all
      - run: npx nx run-many --target=test --parallel --max-parallel=2 --all
      - run: npx nx-cloud stop-all-agents
      - name: Tag main branch if all jobs succeed
        uses: nrwl/nx-tag-successful-ci-run@v1
  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v1
      - uses: actions/setup-node@v1
      - run: npm ci
      - run: npx nx run-many --target=build --parallel --max-parallel=3 --all
      - run: npx nx run-many --target=test --parallel --max-parallel=2 --all
      - run: npx nx-cloud stop-all-agents
  agents:
    runs-on: ubuntu-latest
    name: Agent 1
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [ 1, 2, 3 ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - run: npm install
      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent  
